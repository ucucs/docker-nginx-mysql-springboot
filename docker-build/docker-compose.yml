version: "3.8" # 指定 docker-compose.yml 文件的写法格式
services: # 用来表示compose需要启动的服务 本文件从.env文件读取变量

  redis: # 自定义服务名
    image: redis:${REDIS_IMAGE_TAG:-6.0.8-alpine} # 指定服务所使用的镜像
    container_name: ${REDIS_CONTAINER_NAME:-redis} # docker容器实例名称
    restart: always # 配置重启，表示如果服务启动不成功会一直尝试
    privileged: true # 特权模式,修改系统变量
    environment: # 环境变量定义
      - TZ=Asia/Shanghai
      - author=${AUTHOR:-ucucs}
    ports: # 端口映射,外部访问的端口 不同端口可以如此配置 6379:6380,单独写代表随机端口
      - ${REDIS_PORT:-6379}:6379
    networks: # 网络网段定义
      - frontend
    volumes: # 加载本地目录下的配置文件到容器目标地址下
      - ${REDIS_CNF:-./config/redis/redis.conf}:/usr/local/etc/redis/redis.conf
      - ${REDIS_DATA:-./data/redis/}:/data/
      - ${REDIS_LOG:-./log/redis/}:/var/log/redis/
    command: # 表示以这个命令来启动服务
      /bin/sh -c "echo 65535 > /proc/sys/net/core/somaxconn
      && echo never > /sys/kernel/mm/transparent_hugepage/enabled
      && echo never > /sys/kernel/mm/transparent_hugepage/defrag
      && redis-server /usr/local/etc/redis/redis.conf"

  mysql:
    container_name: mysql
    image: mysql:5.7.31
    restart: always
    env_file: # 读取指定的环境变量文件
      - ./mysql.env
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-ucucs}
      - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST:-'%'}
      - MYSQL_USER=${MYSQL_USER:-ucs}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-ucspwd}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-ucsdb}
    ports:
      - "3306:3306"
    volumes:
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./data/mysql/:/var/lib/mysql/
      - ./log/mysql/:/var/log/mysql/

networks: # 网络定义
  frontend: # 网络命名
    driver: bridge # 定义网络模式,默认时可忽略 bridge(默认) host none service:[service name] container:[container name/id]